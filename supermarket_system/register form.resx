<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>