<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>